---
import Markdown from '@astrojs/markdown-component';
import PageLayout from '@src/layouts/PageLayout.astro'
---
<PageLayout>

<div class="yap module">
  <h1 class="yap module-title" id="cityseer-metrics-observe">
    <a aria-hidden="true" href="#cityseer-metrics-observe" tabindex="-1">
      <svg aria-hidden="true" class="heading-icon" height="15px" viewBox="0 0 20 20" width="15px" xmlns="http://www.w3.org/2000/svg">
        <path clip-rule="evenodd" d="
M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z
" fill-rule="evenodd"></path>
      </svg>
    </a>cityseer.metrics.observe
  </h1><Markdown is:raw>
Observe module for computing observations derived from `networkX` graphs.

 These methods are generally sufficiently simple that further computational optimisation is not required. Network centrality methods (which do require further computational optimisation due to their complexity) are handled separately in the [`networks`](/metrics/networks/) module.
</Markdown>
  <section class="yap func">
    <h2 class="yap func-title" id="route-continuity">
      <a aria-hidden="true" href="#route-continuity" tabindex="-1">
        <svg aria-hidden="true" class="heading-icon" height="15px" viewBox="0 0 20 20" width="15px" xmlns="http://www.w3.org/2000/svg">
          <path clip-rule="evenodd" d="
M12.586 4.586a2 2 0 112.828 2.828l-3 3a2 2 0 01-2.828 0 1 1 0 00-1.414 1.414 4 4 0 005.656 0l3-3a4 4 0 00-5.656-5.656l-1.5 1.5a1 1 0 101.414 1.414l1.5-1.5zm-5 5a2 2 0 012.828 0 1 1 0 101.414-1.414 4 4 0 00-5.656 0l-3 3a4 4 0 105.656 5.656l1.5-1.5a1 1 0 10-1.414-1.414l-1.5 1.5a2 2 0 11-2.828-2.828l3-3z
" fill-rule="evenodd"></path>
        </svg>
      </a>route_continuity
    </h2>
    <div class="yap func-sig-content">
      <div class="yap func-sig">
        <span>route_continuity(</span>
        <div class="yap func-sig-params">
          <div class="yap func-sig-param">nx_multigraph, </div>
          <div class="yap func-sig-param">method)</div>
        </div>
      </div>
    </div>
    <div class="yap"><Markdown is:raw>
Compute the route continuity for a given graph.
</Markdown></div>
  </section>
</div>
</PageLayout>

