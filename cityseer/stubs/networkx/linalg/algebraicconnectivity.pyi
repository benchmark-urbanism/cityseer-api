# Stubs for networkx.linalg.algebraicconnectivity (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from numpy import dot
from typing import Any, Optional

ddot = dot

class _PCGSolver:
    def __init__(self, A: Any, M: Any) -> None: ...
    def solve(self, B: Any, tol: Any): ...

class _CholeskySolver:
    def __init__(self, A: Any) -> None: ...
    def solve(self, B: Any, tol: Optional[Any] = ...): ...

class _LUSolver:
    def __init__(self, A: Any) -> None: ...
    def solve(self, B: Any, tol: Optional[Any] = ...): ...

def algebraic_connectivity(G: Any, weight: str = ..., normalized: bool = ..., tol: float = ..., method: str = ..., seed: Optional[Any] = ...): ...
def fiedler_vector(G: Any, weight: str = ..., normalized: bool = ..., tol: float = ..., method: str = ..., seed: Optional[Any] = ...): ...
def spectral_ordering(G: Any, weight: str = ..., normalized: bool = ..., tol: float = ..., method: str = ..., seed: Optional[Any] = ...): ...
def setup_module(module: Any) -> None: ...
