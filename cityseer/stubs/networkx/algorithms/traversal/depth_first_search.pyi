# Stubs for networkx.algorithms.traversal.depth_first_search (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional, TypeVar, Tuple, Iterator

from networkx.classes.graph import Graph

T = TypeVar("T")

def dfs_edges(G: Graph[T], source: Optional[T] = ..., depth_limit: Optional[int] = ...) -> Iterator[Tuple[T, T]]: ...
def dfs_tree(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...): ...
def dfs_predecessors(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...): ...
def dfs_successors(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...): ...
def dfs_postorder_nodes(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...): ...
def dfs_preorder_nodes(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...): ...
def dfs_labeled_edges(G: Any, source: Optional[Any] = ..., depth_limit: Optional[Any] = ...) -> None: ...
