# Stubs for networkx.algorithms.tests.test_link_prediction (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from nose.tools import *
from typing import Any

class TestResourceAllocationIndex:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_equal_nodes(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestJaccardCoefficient:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_isolated_nodes(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestAdamicAdarIndex:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_equal_nodes(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestPreferentialAttachment:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_zero_degrees(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestCNSoundarajanHopcroft:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_equal_nodes(self) -> None: ...
    def test_different_community(self) -> None: ...
    def test_no_community_information(self) -> None: ...
    def test_insufficient_community_information(self) -> None: ...
    def test_sufficient_community_information(self) -> None: ...
    def test_custom_community_attribute_name(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestRAIndexSoundarajanHopcroft:
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_equal_nodes(self) -> None: ...
    def test_different_community(self) -> None: ...
    def test_no_community_information(self) -> None: ...
    def test_insufficient_community_information(self) -> None: ...
    def test_sufficient_community_information(self) -> None: ...
    def test_custom_community_attribute_name(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...

class TestWithinInterCluster:
    delta: float = ...
    func: Any = ...
    test: Any = ...
    def setUp(self) -> None: ...
    def test_K5(self) -> None: ...
    def test_P3(self) -> None: ...
    def test_S4(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def test_no_common_neighbor(self) -> None: ...
    def test_equal_nodes(self) -> None: ...
    def test_different_community(self) -> None: ...
    def test_no_inter_cluster_common_neighbor(self) -> None: ...
    def test_no_community_information(self) -> None: ...
    def test_insufficient_community_information(self) -> None: ...
    def test_sufficient_community_information(self) -> None: ...
    def test_zero_delta(self) -> None: ...
    def test_negative_delta(self) -> None: ...
    def test_custom_community_attribute_name(self) -> None: ...
    def test_all_nonexistent_edges(self) -> None: ...
