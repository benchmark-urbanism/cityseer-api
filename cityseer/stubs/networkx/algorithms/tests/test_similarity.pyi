# Stubs for networkx.algorithms.tests.test_similarity (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from nose.tools import *
from networkx.algorithms.similarity import *
from networkx.generators.classic import *
from typing import Any

def nmatch(n1: Any, n2: Any): ...
def ematch(e1: Any, e2: Any): ...
def getCanonical(): ...

class TestSimilarity:
    @classmethod
    def setupClass(cls) -> None: ...
    def test_graph_edit_distance(self) -> None: ...
    def test_graph_edit_distance_node_match(self): ...
    def test_graph_edit_distance_edge_match(self): ...
    def test_graph_edit_distance_node_cost(self): ...
    def test_graph_edit_distance_edge_cost(self): ...
    def test_graph_edit_distance_upper_bound(self) -> None: ...
    def test_optimal_edit_paths(self): ...
    def test_optimize_graph_edit_distance(self) -> None: ...
    def test_selfloops(self) -> None: ...
    def test_digraph(self) -> None: ...
    def test_multigraph(self) -> None: ...
    def test_multidigraph(self) -> None: ...
    def testCopy(self) -> None: ...
    def testSame(self) -> None: ...
    def testOneEdgeLabelDiff(self) -> None: ...
    def testOneNodeLabelDiff(self) -> None: ...
    def testOneExtraNode(self) -> None: ...
    def testOneExtraEdge(self) -> None: ...
    def testOneExtraNodeAndEdge(self) -> None: ...
    def testGraph1(self) -> None: ...
    def testGraph2(self) -> None: ...
    def testGraph3(self) -> None: ...
    def testGraph4(self) -> None: ...
    def testGraph4_a(self) -> None: ...
    def testGraph4_b(self) -> None: ...
