# Stubs for networkx.classes.multidigraph (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from networkx.classes.digraph import DiGraph
from networkx.classes.multigraph import MultiGraph
from networkx.classes.coreviews import AdjacencyView
from networkx.classes.reportviews import MultiDegreeView, InMultiDegreeView, OutMultiDegreeView


from typing import Any, Optional, TypeVar

T = TypeVar('T')


class MultiDiGraph(MultiGraph[T], DiGraph[T]):
    edge_key_dict_factory: Any = ...
    def __init__(self, incoming_graph_data: Optional[Any] = ..., **attr: Any) -> None: ...
    @property
    def adj(self) -> AdjacencyView: ...
    @property
    def succ(self): ...
    @property
    def pred(self): ...
    def add_edge(self, u_for_edge: T, v_for_edge: T, key: Optional[Any] = ..., **attr: Any): ...
    def remove_edge(self, u: T, v: T, key: Optional[Any] = ...) -> None: ...
    @property
    def edges(self): ...
    out_edges: Any = ...
    @property
    def in_edges(self): ...
    @property
    def degree(self) -> MultiDegreeView[T]: ...
    @property
    def in_degree(self) -> InMultiDegreeView[T]: ...
    @property
    def out_degree(self) -> OutMultiDegreeView[T]: ...
    def is_multigraph(self) -> bool: ...
    def is_directed(self) -> bool: ...
    def to_undirected(self, reciprocal: bool = ..., as_view: bool = ...) -> MultiGraph[T]: ...
    def reverse(self, copy: bool = ...) -> 'MultiDiGraph[T]': ...
