# Stubs for networkx.classes.coreviews (Python 3)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from collections.abc import Mapping
from typing import Any

class AtlasView(Mapping):
    def __init__(self, d: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __getitem__(self, key: Any): ...
    def copy(self): ...

class AdjacencyView(AtlasView):
    def __getitem__(self, name: Any): ...
    def copy(self): ...

class MultiAdjacencyView(AdjacencyView):
    def __getitem__(self, name: Any): ...
    def copy(self): ...

class UnionAtlas(Mapping):
    def __init__(self, succ: Any, pred: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __getitem__(self, key: Any): ...
    def copy(self): ...

class UnionAdjacency(Mapping):
    def __init__(self, succ: Any, pred: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __getitem__(self, nbr: Any): ...
    def copy(self): ...

class UnionMultiInner(UnionAtlas):
    def __getitem__(self, node: Any): ...
    def copy(self): ...

class UnionMultiAdjacency(UnionAdjacency):
    def __getitem__(self, node: Any): ...

class FilterAtlas(Mapping):
    NODE_OK: Any = ...
    def __init__(self, d: Any, NODE_OK: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __getitem__(self, key: Any): ...
    def copy(self): ...

class FilterAdjacency(Mapping):
    NODE_OK: Any = ...
    EDGE_OK: Any = ...
    def __init__(self, d: Any, NODE_OK: Any, EDGE_OK: Any) -> None: ...
    def __len__(self): ...
    def __iter__(self): ...
    def __getitem__(self, node: Any): ...
    def copy(self): ...

class FilterMultiInner(FilterAdjacency):
    def __iter__(self) -> None: ...
    def __getitem__(self, nbr: Any): ...
    def copy(self): ...

class FilterMultiAdjacency(FilterAdjacency):
    def __getitem__(self, node: Any): ...
    def copy(self): ...
